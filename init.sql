--https://www.sqlitetutorial.net
--@AUTHOR CARL HARTRY
-- INDEPENDENT ENTITIES

--local bars
CREATE TABLE IF NOT EXISTS BAR(
    BAR_ID INTEGER PRIMARY KEY,
    NAME TEXT NOT NULL,
    ADDRESS TEXT NOT NULL,
    UNIQUE(NAME),
    UNIQUE(ADDRESS)
);
-- beers recorded 
CREATE TABLE IF NOT EXISTS BEER(
    BEER_ID INTEGER PRIMARY KEY,
    NAME TEXT NOT NULL,
    UNIQUE(NAME)
);
-- brewers that supplies the beers recored
CREATE TABLE IF NOT EXISTS BREWER(
    BREWER_ID INTEGER PRIMARY KEY,
    NAME TEXT NOT NULL,
    ADDRESS TEXT NOT NULL,
    UNIQUE(NAME)
);
--people whom drank the beers
CREATE TABLE IF NOT EXISTS DRINKER(
    DRINKER_ID INTEGER PRIMARY KEY,
    FNAME TEXT NOT NULL,
    LNAME TEXT NOT NULL,
    ADDRESS TEXT,
    UNIQUE(FNAME,LNAME)
);

--BRIDGE ENTITIES

--BAR SERVES BEER 
CREATE TABLE IF NOT EXISTS SERVES(
    SERVES_ID INEGER PRIMARY KEY,
    BEER_SOLD INTEGER,
    BAR_SELLING INTEGER,
    PRICE NUMERIC(3,2) NOT NULL,
    FOREIGN KEY (BEER_SOLD) REFERENCES BEER(BEER_ID) ON DELETE CASCADE,
    FOREIGN KEY (BAR_SELLING) REFERENCES BAR(BAR_ID) ON DELETE CASCADE,
    CHECK(PRICE >= 0.0)
);
--BREWR BREWS BEER
CREATE TABLE IF NOT EXISTS BREWS(
    BREWS_ID INTEGER PRIMARY KEY,
    PRODUCT INEGER,
    VENDER INTEGER,
    FOREIGN KEY (VENDER) REFERENCES BREWER(BREWER_ID) ON DELETE CASCADE,    
    FOREIGN KEY (PRODUCT) REFERENCES BEER(BEER_ID) ON DELETE CASCADE
);
--perosn visits bar
CREATE TABLE IF NOT EXISTS VISITS(
    VISITS_ID INEGER PRIMARY KEY,
    PERSON INTEGER,
    BAR_VISITED INTEGER,
    TIMES_A_WEEK INTEGER NOT NULL,
    FOREIGN KEY (PERSON) REFERENCES DRINKER(DRINKER_ID) ON DELETE CASCADE,
    FOREIGN KEY (BAR_VISITED) REFERENCES BAR(BAR_ID) ON DELETE CASCADE,
    CHECK(TIMES_A_WEEK > 0)
);
--person likes beer
CREATE TABLE IF NOT EXISTS LIKES(
    PREFERS_ID INEGER PRIMARY KEY,
    PERSON INEGER,
    BEER_CHOICE INTEGER,
    FOREIGN KEY (PERSON) REFERENCES DRINKER(DRINKER_ID) ON DELETE CASCADE,
    FOREIGN KEY (BEER_CHOICE) REFERENCES BEER(BEER_ID) ON DELETE CASCADE
);
-- Data population->independent data
INSERT INTO BAR(NAME,ADDRESS)  VALUES
    ('THE EDGE','108 MORRIS STREET'),
    ('SATISFACTION','905 W.MAIN STREET'),
    ('CLUB BOBCAT','231 W Hancock STREET');
INSERT INTO BEER(NAME)  VALUES
    ('Budweiser'),
    ('Corona'),
    ('Dixie'),
    ('Miller Lite');
INSERT INTO BREWER(NAME,ADDRESS)  VALUES
    ('ANHEUSER-BUSCH INC.','6465 E Johns Crossing'),
    ('GRUPO MODELO','25207 Saltillo'),
    ('DIXIE BREWING','5101 S Dixie Hwy');
INSERT INTO DRINKER(FNAME,LNAME,ADDRESS)  VALUES
    ('AMY','BRANCH','100 W.MAIN STREET'),
    ('BEN','BENJERMAN','101 W.MAIN STREET'),
    ('DAN','DANGER','300 N.DUKE STREET'),
    ('LARC','YRTRAH','211 BOBCAT STREET');
-- Data population->dependent data
INSERT INTO BREWS(PRODUCT,VENDER)  VALUES
    (1,1), --BUD X ANUHEUSER
    (2,2), -- CORONA X GRUPO
    (3,3), -- DIXIE X DIXIE.CO
    (4,2); -- MILLER X GRUPO
INSERT INTO VISITS(PERSON,BAR_VISITED,TIMES_A_WEEK)  VALUES
    (2,2,2), -- BEN X SATIFY
    (3,1,1), -- DAN X EDGE
    (3,2,2), -- DAN X SATIFY
    (4,1,1), -- LARC X EDGE
    (4,2,2), -- LARC X SATIFY
    (4,3,8); -- LARC X BOBCATS I THINK LARC HAS A PROBLEM
INSERT INTO SERVES(BAR_SELLING,BEER_SOLD,PRICE)  VALUES
    (1,1,2.50), -- EDGE X BUD 
    (1,2,3.00), -- EDGE X CORONA
    (2,1,2.25), -- SATIFY X BUD
    (3,1,3.25), -- BOBCAT X BUD
    (3,2,1.50), -- BOBCAT X CORONA
    (3,3,2.10), -- BOBCAT X DIXE
    (3,4,.50);  -- BOBACT X MILLER AND I WONDERED WHY LARC IS SPENDING ALL HIS MONEY HERE
INSERT INTO LIKES(PERSON,BEER_CHOICE)  VALUES
    (1,2), -- AMY X CORONA 
    (3,1), -- DAN X BUD
    (3,2), -- DAN X CORONA
    (2,1), -- BEN X BUD
    (4,1), -- LARC X BUD
    (4,2), -- LARC X CORONA
    (4,3), -- LARC X DIXIE
    (4,4); -- LARC X MILLER IT IS PROVEN HE HAS A PROBLEM